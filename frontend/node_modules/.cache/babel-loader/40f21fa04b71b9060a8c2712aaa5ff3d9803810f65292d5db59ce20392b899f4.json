{"ast":null,"code":"var _jsxFileName = \"/home/victorleao/projetos/spotify/Spotify-Playlists-WebApp/frontend/src/componentes/Table.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabelaValores = props => {\n  if (props.top == 'artist') {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Appearances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.topArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: artist.appearances\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: artist.percentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  } else if (props.top == 'album') {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Appearances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: props.topArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: artist.appearances\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: artist.percentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n};\n_c = TabelaValores;\nexport default TabelaValores;\nvar _c;\n$RefreshReg$(_c, \"TabelaValores\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TabelaValores","props","top","children","fileName","_jsxFileName","lineNumber","columnNumber","topArtists","map","artist","index","name","appearances","percentage","_c","$RefreshReg$"],"sources":["/home/victorleao/projetos/spotify/Spotify-Playlists-WebApp/frontend/src/componentes/Table.js"],"sourcesContent":["import React from 'react';\n\nconst TabelaValores = (props) => {\n\n    if (props.top == 'artist') {\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <th>Artist</th>\n                    <th>Appearances</th>\n                    <th>%</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.topArtists.map((artist, index) => (\n                    <tr key={index}>\n                        <td>{artist.name}</td>\n                        <td>{artist.appearances}</td>\n                        <td>{artist.percentage}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        );\n    } else if (props.top == 'album') {\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <th>Artist</th>\n                    <th>Appearances</th>\n                    <th>%</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.topArtists.map((artist, index) => (\n                    <tr key={index}>\n                        <td>{artist.name}</td>\n                        <td>{artist.appearances}</td>\n                        <td>{artist.percentage}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        );\n    }\n\n};\n\nexport default TabelaValores;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAE7B,IAAIA,KAAK,CAACC,GAAG,IAAI,QAAQ,EAAE;IACvB,oBACIH,OAAA;MAAAI,QAAA,gBACIJ,OAAA;QAAAI,QAAA,eACAJ,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfR,OAAA;YAAAI,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBR,OAAA;YAAAI,QAAA,EAAI;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRR,OAAA;QAAAI,QAAA,EACCF,KAAK,CAACO,UAAU,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChCZ,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,EAAKO,MAAM,CAACE;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBR,OAAA;YAAAI,QAAA,EAAKO,MAAM,CAACG;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7BR,OAAA;YAAAI,QAAA,EAAKO,MAAM,CAACI;UAAU;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHvBI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEhB,CAAC,MAAM,IAAIN,KAAK,CAACC,GAAG,IAAI,OAAO,EAAE;IAC7B,oBACIH,OAAA;MAAAI,QAAA,gBACIJ,OAAA;QAAAI,QAAA,eACAJ,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACfR,OAAA;YAAAI,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBR,OAAA;YAAAI,QAAA,EAAI;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACRR,OAAA;QAAAI,QAAA,EACCF,KAAK,CAACO,UAAU,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChCZ,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,EAAKO,MAAM,CAACE;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBR,OAAA;YAAAI,QAAA,EAAKO,MAAM,CAACG;UAAW;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7BR,OAAA;YAAAI,QAAA,EAAKO,MAAM,CAACI;UAAU;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHvBI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEhB;AAEJ,CAAC;AAACQ,EAAA,GA9CIf,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}