{"ast":null,"code":"var _jsxFileName = \"/home/victorleao/projetos/spotify/Spotify-Playlists-WebApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Header from './componentes/Header';\nimport Stats from './componentes/Stats';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet fetchPlaylistData = 0;\nfunction App() {\n  _s();\n  // States\n  const [playlistLink, setPlaylistLink] = useState(\"\"); // Playlist Link\n  const [buttonCanBeClicked, setButtonCanBeClicked] = useState(false); // Enable/Disable \"Get Stats\" Button\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  let changePlaylistLink = playlistLink => {\n    setPlaylistLink(playlistLink);\n    const regex = /^https:\\/\\/open\\.spotify\\.com\\/playlist\\/[A-Za-z0-9_-]+(\\?si=[A-Za-z0-9_-]+)*$/;\n    const regexCorrect = regex.test(playlistLink);\n    setButtonCanBeClicked(regexCorrect);\n  };\n  let getPlaylistStats = () => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    let tokenExpiration = window.localStorage.getItem(\"tokenExpiration\");\n    if (!token && hash) {\n      token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n\n      // Obtenha o tempo de expiração em segundos (suponhamos que o serviço forneça esse valor)\n      const expiresIn = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"expires_in\")).split(\"=\")[1];\n\n      // Calcule a data de expiração em milissegundos a partir do tempo de expiração\n      const expirationTime = Date.now() + parseInt(expiresIn) * 1000;\n      window.location.hash = \"\";\n      window.localStorage.setItem(\"token\", token);\n      window.localStorage.setItem(\"tokenExpiration\", expirationTime);\n    }\n\n    // Verifique se o token está expirado e remova-o do localStorage, se necessário\n    if (token && tokenExpiration) {\n      const currentTime = Date.now();\n      if (currentTime >= parseInt(tokenExpiration)) {\n        window.localStorage.removeItem(\"token\");\n        window.localStorage.removeItem(\"tokenExpiration\");\n        token = \"\"; // Token expirado, defina como null ou trate de acordo com sua lógica\n      }\n    }\n\n    setToken(token);\n    if (fetchPlaylistData > 0) {\n      setLoaded(false);\n    }\n    setLoading(true);\n    var test_data = {\n      \"playlist_link\": playlistLink,\n      \"access_token\": token\n    };\n    axios.post(\"http://localhost:8000/playlist_get_info/\", test_data).then(response => setData(response.data)).catch(error => setError(error.message)).finally(() => {\n      setLoading(false);\n      setLoaded(true);\n      fetchPlaylistData = 1;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      changePlaylistLink: changePlaylistLink,\n      playlistLink: playlistLink,\n      getPlaylistStats: getPlaylistStats,\n      buttonCanBeClicked: buttonCanBeClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      data: data,\n      error: error,\n      loaded: loaded,\n      loading: loading\n    }, loaded, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HHMnX8ibr5vY5kZCFEn/WrCrAtg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","Header","Stats","jsxDEV","_jsxDEV","fetchPlaylistData","App","_s","playlistLink","setPlaylistLink","buttonCanBeClicked","setButtonCanBeClicked","data","setData","error","setError","loaded","setLoaded","loading","setLoading","changePlaylistLink","regex","regexCorrect","test","getPlaylistStats","hash","window","location","token","localStorage","getItem","tokenExpiration","substring","split","find","elem","startsWith","expiresIn","expirationTime","Date","now","parseInt","setItem","currentTime","removeItem","setToken","test_data","post","then","response","catch","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/victorleao/projetos/spotify/Spotify-Playlists-WebApp/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nimport Header from './componentes/Header'\nimport Stats from './componentes/Stats'\n\nimport './App.css';\n\nlet fetchPlaylistData = 0;\n\nfunction App() {\n\n  // States\n  const [playlistLink, setPlaylistLink] = useState(\"\"); // Playlist Link\n  const [buttonCanBeClicked, setButtonCanBeClicked] = useState(false); // Enable/Disable \"Get Stats\" Button\n\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  let changePlaylistLink = (playlistLink) => {\n    setPlaylistLink(playlistLink)\n\n    const regex = /^https:\\/\\/open\\.spotify\\.com\\/playlist\\/[A-Za-z0-9_-]+(\\?si=[A-Za-z0-9_-]+)*$/;\n\n    const regexCorrect = regex.test(playlistLink)\n    setButtonCanBeClicked(regexCorrect)\n  }\n\n  let getPlaylistStats = () => {\n    const hash = window.location.hash;\n    let token = window.localStorage.getItem(\"token\");\n    let tokenExpiration = window.localStorage.getItem(\"tokenExpiration\");\n\n    if (!token && hash) {\n        token = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"access_token\")).split(\"=\")[1];\n\n        // Obtenha o tempo de expiração em segundos (suponhamos que o serviço forneça esse valor)\n        const expiresIn = hash.substring(1).split(\"&\").find(elem => elem.startsWith(\"expires_in\")).split(\"=\")[1];\n\n        // Calcule a data de expiração em milissegundos a partir do tempo de expiração\n        const expirationTime = Date.now() + (parseInt(expiresIn) * 1000);\n\n        window.location.hash = \"\";\n        window.localStorage.setItem(\"token\", token);\n        window.localStorage.setItem(\"tokenExpiration\", expirationTime);\n    }\n\n    // Verifique se o token está expirado e remova-o do localStorage, se necessário\n    if (token && tokenExpiration) {\n        const currentTime = Date.now();\n        if (currentTime >= parseInt(tokenExpiration)) {\n            window.localStorage.removeItem(\"token\");\n            window.localStorage.removeItem(\"tokenExpiration\");\n            token = \"\"; // Token expirado, defina como null ou trate de acordo com sua lógica\n        }\n    }\n\n    setToken(token)\n\n    if (fetchPlaylistData > 0) {\n      setLoaded(false);\n    }\n    setLoading(true);\n\n    var test_data = {\n      \"playlist_link\": playlistLink,\n      \"access_token\": token,\n    }\n\n    axios\n      .post(\"http://localhost:8000/playlist_get_info/\", test_data)\n      .then((response) => setData(response.data))\n      .catch((error) => setError(error.message))\n      .finally(() => {\n        setLoading(false)\n        setLoaded(true)\n        fetchPlaylistData = 1;\n      });\n  }\n\n  return (\n    <div>\n      <Header changePlaylistLink={changePlaylistLink} \n              playlistLink={playlistLink} \n              getPlaylistStats={getPlaylistStats}\n              buttonCanBeClicked={buttonCanBeClicked}\n      />\n      <Stats key={loaded} \n             data={data} \n             error={error} \n             loaded={loaded} \n             loading={loading}\n      />\n    </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AAEvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,IAAIC,iBAAiB,GAAG,CAAC;AAEzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErE,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE7C,IAAIqB,kBAAkB,GAAIZ,YAAY,IAAK;IACzCC,eAAe,CAACD,YAAY,CAAC;IAE7B,MAAMa,KAAK,GAAG,gFAAgF;IAE9F,MAAMC,YAAY,GAAGD,KAAK,CAACE,IAAI,CAACf,YAAY,CAAC;IAC7CG,qBAAqB,CAACW,YAAY,CAAC;EACrC,CAAC;EAED,IAAIE,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,MAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACF,IAAI;IACjC,IAAIG,KAAK,GAAGF,MAAM,CAACG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIC,eAAe,GAAGL,MAAM,CAACG,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAEpE,IAAI,CAACF,KAAK,IAAIH,IAAI,EAAE;MAChBG,KAAK,GAAGH,IAAI,CAACO,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,cAAc,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEhG;MACA,MAAMI,SAAS,GAAGZ,IAAI,CAACO,SAAS,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,UAAU,CAAC,YAAY,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAExG;MACA,MAAMK,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAIC,QAAQ,CAACJ,SAAS,CAAC,GAAG,IAAK;MAEhEX,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE;MACzBC,MAAM,CAACG,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEd,KAAK,CAAC;MAC3CF,MAAM,CAACG,YAAY,CAACa,OAAO,CAAC,iBAAiB,EAAEJ,cAAc,CAAC;IAClE;;IAEA;IACA,IAAIV,KAAK,IAAIG,eAAe,EAAE;MAC1B,MAAMY,WAAW,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC;MAC9B,IAAIG,WAAW,IAAIF,QAAQ,CAACV,eAAe,CAAC,EAAE;QAC1CL,MAAM,CAACG,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;QACvClB,MAAM,CAACG,YAAY,CAACe,UAAU,CAAC,iBAAiB,CAAC;QACjDhB,KAAK,GAAG,EAAE,CAAC,CAAC;MAChB;IACJ;;IAEAiB,QAAQ,CAACjB,KAAK,CAAC;IAEf,IAAIvB,iBAAiB,GAAG,CAAC,EAAE;MACzBY,SAAS,CAAC,KAAK,CAAC;IAClB;IACAE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI2B,SAAS,GAAG;MACd,eAAe,EAAEtC,YAAY;MAC7B,cAAc,EAAEoB;IAClB,CAAC;IAED5B,KAAK,CACF+C,IAAI,CAAC,0CAA0C,EAAED,SAAS,CAAC,CAC3DE,IAAI,CAAEC,QAAQ,IAAKpC,OAAO,CAACoC,QAAQ,CAACrC,IAAI,CAAC,CAAC,CAC1CsC,KAAK,CAAEpC,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAACqC,OAAO,CAAC,CAAC,CACzCC,OAAO,CAAC,MAAM;MACbjC,UAAU,CAAC,KAAK,CAAC;MACjBF,SAAS,CAAC,IAAI,CAAC;MACfZ,iBAAiB,GAAG,CAAC;IACvB,CAAC,CAAC;EACN,CAAC;EAED,oBACED,OAAA;IAAAiD,QAAA,gBACEjD,OAAA,CAACH,MAAM;MAACmB,kBAAkB,EAAEA,kBAAmB;MACvCZ,YAAY,EAAEA,YAAa;MAC3BgB,gBAAgB,EAAEA,gBAAiB;MACnCd,kBAAkB,EAAEA;IAAmB;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFrD,OAAA,CAACF,KAAK;MACCU,IAAI,EAAEA,IAAK;MACXE,KAAK,EAAEA,KAAM;MACbE,MAAM,EAAEA,MAAO;MACfE,OAAO,EAAEA;IAAQ,GAJZF,MAAM;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAGV;AAAClD,EAAA,CAxFQD,GAAG;AAAAoD,EAAA,GAAHpD,GAAG;AA0FZ,eAAeA,GAAG;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}