{"ast":null,"code":"var _jsxFileName = \"/home/victorleao/projetos/spotify/Spotify-Playlists-WebApp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Header from './componentes/Header';\nimport Stats from './componentes/Stats';\nimport { getTokenFromURL } from './utils/fetchDataUtils';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet fetchPlaylistData = 0;\nfunction App() {\n  _s();\n  // States\n  const [playlistLink, setPlaylistLink] = useState(\"\"); // Playlist Link\n  const [buttonCanBeClicked, setButtonCanBeClicked] = useState(false); // Enable/Disable \"Get Stats\" Button\n\n  const [data, setData] = useState(null); // Spotify Data\n  const [error, setError] = useState(\"\"); // Error during Fetching\n  const [loaded, setLoaded] = useState(false); // Completed Loading\n\n  const [loading, setLoading] = useState(false); // Loading screen\n\n  // Setting and Checking inserted Playlist Link\n  let changePlaylistLink = playlistLink => {\n    const regex = /^https:\\/\\/open\\.spotify\\.com\\/playlist\\/[A-Za-z0-9_-]+(\\?si=[A-Za-z0-9_-]+)*$/;\n    setPlaylistLink(playlistLink);\n    const regexCorrect = regex.test(playlistLink);\n    setButtonCanBeClicked(regexCorrect);\n  };\n\n  // Playlist Stats Fetch\n  let getPlaylistStats = () => {\n    const token = getTokenFromURL();\n\n    // If a playlist has already been loaded one time AND token is valid\n    if (fetchPlaylistData > 0) {\n      if (token) {\n        setLoaded(false);\n      }\n    }\n    var test_data = {\n      \"playlist_link\": playlistLink,\n      \"access_token\": token\n    };\n    axios.post(\"http://localhost:8000/playlist_get_info/\", test_data).then(response => setData(response.data)).catch(error => setError(error.message)).finally(() => {\n      setLoading(false);\n      setLoaded(true);\n      fetchPlaylistData = 1;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      changePlaylistLink: changePlaylistLink,\n      playlistLink: playlistLink,\n      getPlaylistStats: getPlaylistStats,\n      buttonCanBeClicked: buttonCanBeClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      data: data,\n      error: error,\n      loaded: loaded,\n      loading: loading\n    }, loaded, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HHMnX8ibr5vY5kZCFEn/WrCrAtg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","axios","Header","Stats","getTokenFromURL","jsxDEV","_jsxDEV","fetchPlaylistData","App","_s","playlistLink","setPlaylistLink","buttonCanBeClicked","setButtonCanBeClicked","data","setData","error","setError","loaded","setLoaded","loading","setLoading","changePlaylistLink","regex","regexCorrect","test","getPlaylistStats","token","test_data","post","then","response","catch","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/victorleao/projetos/spotify/Spotify-Playlists-WebApp/frontend/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\n\nimport Header from './componentes/Header'\nimport Stats from './componentes/Stats'\n\nimport { getTokenFromURL } from './utils/fetchDataUtils'\n\nimport './App.css';\n\n\nlet fetchPlaylistData = 0;\n\nfunction App() {\n\n  // States\n  const [playlistLink, setPlaylistLink] = useState(\"\"); // Playlist Link\n  const [buttonCanBeClicked, setButtonCanBeClicked] = useState(false); // Enable/Disable \"Get Stats\" Button\n\n  const [data, setData] = useState(null); // Spotify Data\n  const [error, setError] = useState(\"\"); // Error during Fetching\n  const [loaded, setLoaded] = useState(false); // Completed Loading\n\n  const [loading, setLoading] = useState(false); // Loading screen\n\n  // Setting and Checking inserted Playlist Link\n  let changePlaylistLink = (playlistLink) => {\n    const regex = /^https:\\/\\/open\\.spotify\\.com\\/playlist\\/[A-Za-z0-9_-]+(\\?si=[A-Za-z0-9_-]+)*$/;\n\n    setPlaylistLink(playlistLink)    \n\n    const regexCorrect = regex.test(playlistLink)\n\n    setButtonCanBeClicked(regexCorrect)\n  }\n\n  // Playlist Stats Fetch\n  let getPlaylistStats = () => {\n    const token = getTokenFromURL();\n\n    // If a playlist has already been loaded one time AND token is valid\n    if (fetchPlaylistData > 0) {\n      if (token){\n        setLoaded(false);\n      }\n    }\n\n    var test_data = {\n      \"playlist_link\": playlistLink,\n      \"access_token\": token,\n    }\n\n    axios\n      .post(\"http://localhost:8000/playlist_get_info/\", test_data)\n      .then((response) => setData(response.data))\n      .catch((error) => setError(error.message))\n      .finally(() => {\n        setLoading(false)\n        setLoaded(true)\n        fetchPlaylistData = 1;\n      });\n  }\n\n  return (\n    <div>\n      <Header changePlaylistLink={changePlaylistLink} \n              playlistLink={playlistLink} \n              getPlaylistStats={getPlaylistStats}\n              buttonCanBeClicked={buttonCanBeClicked}\n      />\n      <Stats key={loaded} \n             data={data} \n             error={error} \n             loaded={loaded} \n             loading={loading}\n      />\n    </div>\n  );\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}